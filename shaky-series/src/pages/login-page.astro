---
import Snack from '../components/Snack.astro';
const pageTitle = "Login";
import '../styles/global.css';
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>{pageTitle}</title>
  </head>
  
  <body>
<div class="UploadFile">

        <h1 style="color:black;">Login</h1>
        <section class="contact-form">
        <form method="post">
          <div class="txt_field">
            <input id="email" name="username" type="email" required>
            <span></span>
            <label>Email</label>
          </div>
          <div class="txt_field">
            <input  id="password" name="password"  type="password" required>
            <span></span>
            <label>Password</label>
          </div>
          <button class="glob" type="submit">Login</button>
          
        </form>
        </section>

        <Snack id="snackbar"></Snack>

<script>
  function handleFormSubmit(event) {
    event.preventDefault();
    
    const data = new FormData(event.target);

    let username_to_change = data.get("username");
    let final_username = username_to_change.replace('@','%40');

    let body_tosent = `grant_type=&username=${final_username}&password=${data.get("password")}&scope=&client_id=&client_secret=`;

    fetch('http://127.0.0.1:8000/login', {
      credentials: "same-origin",
      method: 'POST',
      headers: {
        'accept': 'application/json',
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: body_tosent
    }).then(response => 
     {
      if (response.status == 200) {
            response.json().then(data => {
                localStorage.setItem("SavedToken", "Bearer " + data["access_token"]);
            });
            
            window.location.href = "/";
      }

      else {
        response.json().then(data => {
          var snack = document.getElementById("snackbar");
snack.innerHTML = "";
console.log(data["detail"]);
snack.innerHTML += data["detail"];
snack.className = "show";
setTimeout(function(){ snack.className = snack.className.replace("show", ""); }, 3000);
            });
      }
     });
  }
  
  const form = document.querySelector('.contact-form');
  form.addEventListener('submit', handleFormSubmit);
</script>

        <div class="signup_link">
            You don't have an account? <a href="/signup-page">Signup</a>
          </div>
      </div>

</body>
</html>

<style>
  .center{
position: absolute;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
width: 400px;
background: white;
border-radius: 10px;
box-shadow: 10px 10px 15px rgba(0,0,0,0.05);
}
.center h1{
text-align: center;
padding: 20px 0;
border-bottom: 1px solid silver;

}
.center form{
padding: 0 40px;
box-sizing: border-box;
}
form .txt_field{
position: relative;
border-bottom: 2px solid #adadad;
margin: 30px 0;
}
.txt_field input{
width: 100%;
padding: 0 5px;
height: 40px;
font-size: 16px;
border: none;
background: none;
outline: none;
}
.txt_field label{
position: absolute;
top: 50%;
left: 5px;
color: #adadad;
transform: translateY(-50%);
font-size: 16px;
pointer-events: none;
transition: .5s;
}
.txt_field span::before{
content: '';
position: absolute;
top: 40px;
left: 0;
width: 0%;
height: 2px;
background: #2691d9;
transition: .5s;
}
.txt_field input:focus ~ label,
.txt_field input:valid ~ label{
top: -5px;
color: #2691d9;
}
.txt_field input:focus ~ span::before,
.txt_field input:valid ~ span::before{
width: 100%;
}
.pass{
margin: -5px 0 20px 5px;
color: #a6a6a6;
cursor: pointer;
}
.pass:hover{
text-decoration: underline;
}

.signup_link{
margin: 30px 0;
text-align: center;
font-size: 16px;
color: #666666;
}
.signup_link a{
color: #2691d9;
text-decoration: none;
}
.signup_link a:hover{
text-decoration: underline;
}

</style>